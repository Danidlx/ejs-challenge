name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: pod-titans    # TODO: update to cluster name
  GKE_ZONE: us-east1-b   # TODO: update to cluster zone
  DEPLOYMENT_NAME: ejs-challenge # TODO: update to deployment name
  IMAGE: ejs-challenge
  NAMESPACE: default
  DB_HOST: mongo-mongodb
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-20.04
    environment: development

    steps:
    - name: Slack Notification
      uses: act10ns/slack@v1
      with:
        status: starting
        channel: '#devops'
      if: always()

    - name: Checkout
      id: git-checkout
      uses: actions/checkout@v2

    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@v0.2.0
    #   id: setup-cloud
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ secrets.GKE_PROJECT }}

    # # Configure Docker to use the gcloud command-line tool as a credential
    # # helper for authentication
    # - run: |-
    #     gcloud --quiet auth configure-docker
    #   id: configure-docker  

    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@v0.2.1
    #   id: get-cluster-credentials
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # # Build the Docker image
    # - name: Build
    #   id: docker-build
    #   run: |-
    #     docker build \
    #       --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .

    # - name: Anchore scan
    #   uses: anchore/scan-action@v2
    #   id: scan
    #   with:
    #     image: "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    #     grype-version: "0.9.0"
    #     acs-report-enable: false
    #     fail-build: false
    #     debug: true
    #     severity-cutoff: "medium"      
    

    # Update Helm Chart
    - name: Replace Image on Helm Chart
      id: update-helm-chart
      run: |-
        sudo add-apt-repository ppa:rmescandon/yq
        sudo apt-get update
        sudo apt-get install -y yq
        yq w helm/ejs-challenge/values.yaml "image.tag" "$GITHUB_SHA"

    - name: Commit changes
      id: commit-changes
      uses: EndBug/add-and-commit@v7
      with:
        author_name: github-actions
        add: './helm/ejs-challenge/values.yaml'

    # Push the Docker image to Google Container Registry
    # - name: Publish
    #   id: docker-push
    #   run: |-
    #     docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   id: deploy
    #   run: |-
    #     helm -n $NAMESPACE upgrade --install $DEPLOYMENT_NAME ./helm/$DEPLOYMENT_NAME --set image.repository=gcr.io/$PROJECT_ID/$IMAGE --set image.tag=$GITHUB_SHA --set envMap.DB_HOST=$DB_HOST
    #     kubectl rollout status deployment/$DEPLOYMENT_NAME
    #     kubectl get services -o wide

    # - uses: act10ns/slack@v1
    #   with:
    #     status: ${{ job.status }} 
    #     steps: ${{ toJson(steps) }}
    #     channel: '#devops'
    #   if: always()
      
    # - run: |-
    #     export RANDOM_SENTENCE=$(shuf -i 1-50 -n 1)p
    #     export SUCCESS=$(sed -n $RANDOM_SENTENCE .github/workflows/funny_quotes.txt)
    #     curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$SUCCESS"'"}' $SLACK_WEBHOOK_URL
    #   name: FunnyQuote
